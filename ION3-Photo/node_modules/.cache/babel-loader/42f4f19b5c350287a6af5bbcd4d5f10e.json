{"ast":null,"code":"/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = win => {\n  const defaultPlatformMap = new Map();\n  defaultPlatformMap.set('web', {\n    name: 'web'\n  });\n  const capPlatforms = win.CapacitorPlatforms || {\n    currentPlatform: {\n      name: 'web'\n    },\n    platforms: defaultPlatformMap\n  };\n\n  const addPlatform = (name, platform) => {\n    capPlatforms.platforms.set(name, platform);\n  };\n\n  const setPlatform = name => {\n    if (capPlatforms.platforms.has(name)) {\n      capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n    }\n  };\n\n  capPlatforms.addPlatform = addPlatform;\n  capPlatforms.setPlatform = setPlatform;\n  return capPlatforms;\n};\n\nconst initPlatforms = win => win.CapacitorPlatforms = createCapacitorPlatforms(win);\n\nconst CapacitorPlatforms = /*#__PURE__*/initPlatforms(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst addPlatform = CapacitorPlatforms.addPlatform;\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n  var _a;\n\n  const config = webPlugin.config;\n  const Plugins = cap.Plugins;\n\n  if (!config || !config.name) {\n    // TODO: add link to upgrade guide\n    throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n  } // TODO: add link to upgrade guide\n\n\n  console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n\n  if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n    // Add the web plugin into the plugins registry if there already isn't\n    // an existing one. If it doesn't already exist, that means\n    // there's no existing native implementation for it.\n    // - OR -\n    // If we already have a plugin registered (meaning it was defined in the native layer),\n    // then we should only overwrite it if the corresponding web plugin activates on\n    // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n    Plugins[config.name] = webPlugin;\n  }\n};\n\nvar ExceptionCode;\n\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\n\nclass CapacitorException extends Error {\n  constructor(message, code) {\n    super(message);\n    this.message = message;\n    this.code = code;\n  }\n\n}\n\nconst getPlatformId = win => {\n  var _a, _b;\n\n  if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n    return 'android';\n  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n    return 'ios';\n  } else {\n    return 'web';\n  }\n};\n\nconst createCapacitor = win => {\n  var _a, _b, _c, _d, _e;\n\n  const cap = win.Capacitor || {};\n  const Plugins = cap.Plugins = cap.Plugins || {};\n  const capPlatforms = win.CapacitorPlatforms;\n\n  const defaultGetPlatform = () => getPlatformId(win);\n\n  const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n\n  const defaultIsNativePlatform = () => getPlatformId(win) !== 'web';\n\n  const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n\n  const defaultIsPluginAvailable = pluginName => {\n    const plugin = registeredPlugins.get(pluginName);\n\n    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n      // JS implementation available for the current platform.\n      return true;\n    }\n\n    if (getPluginHeader(pluginName)) {\n      // Native implementation available.\n      return true;\n    }\n\n    return false;\n  };\n\n  const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) || defaultIsPluginAvailable;\n\n  const defaultGetPluginHeader = pluginName => {\n    var _a;\n\n    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);\n  };\n\n  const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n\n  const handleError = err => win.console.error(err);\n\n  const pluginMethodNoop = (_target, prop, pluginName) => {\n    return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n  };\n\n  const registeredPlugins = new Map();\n\n  const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n    const registeredPlugin = registeredPlugins.get(pluginName);\n\n    if (registeredPlugin) {\n      console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n      return registeredPlugin.proxy;\n    }\n\n    const platform = getPlatform();\n    const pluginHeader = getPluginHeader(pluginName);\n    let jsImplementation;\n\n    const loadPluginImplementation = async () => {\n      if (!jsImplementation && platform in jsImplementations) {\n        jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = await jsImplementations[platform]() : jsImplementation = jsImplementations[platform];\n      }\n\n      return jsImplementation;\n    };\n\n    const createPluginMethod = (impl, prop) => {\n      var _a, _b;\n\n      if (pluginHeader) {\n        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n\n        if (methodHeader) {\n          if (methodHeader.rtype === 'promise') {\n            return options => cap.nativePromise(pluginName, prop.toString(), options);\n          } else {\n            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n          }\n        } else if (impl) {\n          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n        }\n      } else if (impl) {\n        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n      } else {\n        throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n      }\n    };\n\n    const createPluginMethodWrapper = prop => {\n      let remove;\n\n      const wrapper = (...args) => {\n        const p = loadPluginImplementation().then(impl => {\n          const fn = createPluginMethod(impl, prop);\n\n          if (fn) {\n            const p = fn(...args);\n            remove = p === null || p === void 0 ? void 0 : p.remove;\n            return p;\n          } else {\n            throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n          }\n        });\n\n        if (prop === 'addListener') {\n          p.remove = async () => remove();\n        }\n\n        return p;\n      }; // Some flair âœ¨\n\n\n      wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n\n      Object.defineProperty(wrapper, 'name', {\n        value: prop,\n        writable: false,\n        configurable: false\n      });\n      return wrapper;\n    };\n\n    const addListener = createPluginMethodWrapper('addListener');\n    const removeListener = createPluginMethodWrapper('removeListener');\n\n    const addListenerNative = (eventName, callback) => {\n      const call = addListener({\n        eventName\n      }, callback);\n\n      const remove = async () => {\n        const callbackId = await call;\n        removeListener({\n          eventName,\n          callbackId\n        }, callback);\n      };\n\n      const p = new Promise(resolve => call.then(() => resolve({\n        remove\n      })));\n\n      p.remove = async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      };\n\n      return p;\n    };\n\n    const proxy = new Proxy({}, {\n      get(_, prop) {\n        switch (prop) {\n          // https://github.com/facebook/react/issues/20030\n          case '$$typeof':\n            return undefined;\n\n          case 'addListener':\n            return pluginHeader ? addListenerNative : addListener;\n\n          case 'removeListener':\n            return removeListener;\n\n          default:\n            return createPluginMethodWrapper(prop);\n        }\n      }\n\n    });\n    Plugins[pluginName] = proxy;\n    registeredPlugins.set(pluginName, {\n      name: pluginName,\n      proxy,\n      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])\n    });\n    return proxy;\n  };\n\n  const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin; // Add in convertFileSrc for web, it will already be available in native context\n\n  if (!cap.convertFileSrc) {\n    cap.convertFileSrc = filePath => filePath;\n  }\n\n  cap.getPlatform = getPlatform;\n  cap.handleError = handleError;\n  cap.isNativePlatform = isNativePlatform;\n  cap.isPluginAvailable = isPluginAvailable;\n  cap.pluginMethodNoop = pluginMethodNoop;\n  cap.registerPlugin = registerPlugin;\n  cap.Exception = CapacitorException;\n  cap.DEBUG = !!cap.DEBUG;\n  cap.isLoggingEnabled = !!cap.isLoggingEnabled; // Deprecated props\n\n  cap.platform = cap.getPlatform();\n  cap.isNative = cap.isNativePlatform();\n  return cap;\n};\n\nconst initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);\n\nconst Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\n\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\n\nconst registerWebPlugin = plugin => legacyRegisterWebPlugin(Capacitor, plugin);\n/**\n * Base class web plugins should extend.\n */\n\n\nclass WebPlugin {\n  constructor(config) {\n    this.listeners = {};\n    this.windowListeners = {};\n\n    if (config) {\n      // TODO: add link to upgrade guide\n      console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n      this.config = config;\n    }\n  }\n\n  addListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n\n    if (!listeners) {\n      this.listeners[eventName] = [];\n    }\n\n    this.listeners[eventName].push(listenerFunc); // If we haven't added a window listener for this event and it requires one,\n    // go ahead and add it\n\n    const windowListener = this.windowListeners[eventName];\n\n    if (windowListener && !windowListener.registered) {\n      this.addWindowListener(windowListener);\n    }\n\n    const remove = async () => this.removeListener(eventName, listenerFunc);\n\n    const p = Promise.resolve({\n      remove\n    });\n    Object.defineProperty(p, 'remove', {\n      value: async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      }\n    });\n    return p;\n  }\n\n  async removeAllListeners() {\n    this.listeners = {};\n\n    for (const listener in this.windowListeners) {\n      this.removeWindowListener(this.windowListeners[listener]);\n    }\n\n    this.windowListeners = {};\n  }\n\n  notifyListeners(eventName, data) {\n    const listeners = this.listeners[eventName];\n\n    if (listeners) {\n      listeners.forEach(listener => listener(data));\n    }\n  }\n\n  hasListeners(eventName) {\n    return !!this.listeners[eventName].length;\n  }\n\n  registerWindowListener(windowEventName, pluginEventName) {\n    this.windowListeners[pluginEventName] = {\n      registered: false,\n      windowEventName,\n      pluginEventName,\n      handler: event => {\n        this.notifyListeners(pluginEventName, event);\n      }\n    };\n  }\n\n  unimplemented(msg = 'not implemented') {\n    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n  }\n\n  unavailable(msg = 'not available') {\n    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n  }\n\n  async removeListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n\n    if (!listeners) {\n      return;\n    }\n\n    const index = listeners.indexOf(listenerFunc);\n    this.listeners[eventName].splice(index, 1); // If there are no more listeners for this type of event,\n    // remove the window listener\n\n    if (!this.listeners[eventName].length) {\n      this.removeWindowListener(this.windowListeners[eventName]);\n    }\n  }\n\n  addWindowListener(handle) {\n    window.addEventListener(handle.windowEventName, handle.handler);\n    handle.registered = true;\n  }\n\n  removeWindowListener(handle) {\n    if (!handle) {\n      return;\n    }\n\n    window.removeEventListener(handle.windowEventName, handle.handler);\n    handle.registered = false;\n  }\n\n}\n\nconst WebView = /*#__PURE__*/registerPlugin('WebView');\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };","map":{"version":3,"sources":["../build/platforms.js","../build/legacy/legacy-web-plugin-merge.js","../build/util.js","../build/runtime.js","../build/global.js","../build/web-plugin.js","../build/core-plugins.js"],"names":[],"mappings":"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","sourcesContent":["const createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\nexport const CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\nexport const addPlatform = CapacitorPlatforms.addPlatform;\nexport const setPlatform = CapacitorPlatforms.setPlatform;\n//# sourceMappingURL=platforms.js.map","export const legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n//# sourceMappingURL=legacy-web-plugin-merge.js.map","export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => getPlatformId(win);\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatformId(win) !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair âœ¨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","import { registerPlugin } from './global';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n//# sourceMappingURL=core-plugins.js.map"]},"metadata":{},"sourceType":"module"}