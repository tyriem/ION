import {
  __awaiter,
  __extends,
  __generator,
  __spreadArray
} from "./chunk-CX6VZJLV.js";
import {
  init_define_process_env
} from "./chunk-JD4GRHLE.js";

// ../../../../../Documents/CODE/ION/ION3-Photo/node_modules/@ionic/core/dist/esm-es5/index-7a8b7a1c.js
init_define_process_env();
var NAMESPACE = "ionic";
var scopeId;
var contentRef;
var hostTagName;
var useNativeShadowDom = false;
var checkSlotFallbackVisibility = false;
var checkSlotRelocate = false;
var isSvgMode = false;
var queuePending = false;
var win = typeof window !== "undefined" ? window : {};
var CSS = win.CSS;
var doc = win.document || { head: {} };
var plt = { $flags$: 0, $resourcesUrl$: "", jmp: function(e) {
  return e();
}, raf: function(e) {
  return requestAnimationFrame(e);
}, ael: function(e, t, r, n) {
  return e.addEventListener(t, r, n);
}, rel: function(e, t, r, n) {
  return e.removeEventListener(t, r, n);
}, ce: function(e, t) {
  return new CustomEvent(e, t);
} };
var supportsShadow = function() {
  return (doc.head.attachShadow + "").indexOf("[native") > -1;
}();
var promiseResolve = function(e) {
  return Promise.resolve(e);
};
var supportsConstructibleStylesheets = function() {
  try {
    new CSSStyleSheet();
    return typeof new CSSStyleSheet().replace === "function";
  } catch (e) {
  }
  return false;
}();
var addHostEventListeners = function(e, t, r, n) {
  if (r) {
    r.map(function(r2) {
      var n2 = r2[0], a = r2[1], o = r2[2];
      var s = getHostListenerTarget(e, n2);
      var i = hostListenerProxy(t, o);
      var l = hostListenerOpts(n2);
      plt.ael(s, a, i, l);
      (t.$rmListeners$ = t.$rmListeners$ || []).push(function() {
        return plt.rel(s, a, i, l);
      });
    });
  }
};
var hostListenerProxy = function(e, t) {
  return function(r) {
    try {
      {
        if (e.$flags$ & 256) {
          e.$lazyInstance$[t](r);
        } else {
          (e.$queuedListeners$ = e.$queuedListeners$ || []).push([t, r]);
        }
      }
    } catch (n) {
      consoleError(n);
    }
  };
};
var getHostListenerTarget = function(e, t) {
  if (t & 4)
    return doc;
  if (t & 8)
    return win;
  if (t & 16)
    return doc.body;
  return e;
};
var hostListenerOpts = function(e) {
  return (e & 2) !== 0;
};
var CONTENT_REF_ID = "r";
var ORG_LOCATION_ID = "o";
var SLOT_NODE_ID = "s";
var TEXT_NODE_ID = "t";
var HYDRATE_ID = "s-id";
var HYDRATED_STYLE_ID = "sty-id";
var HYDRATE_CHILD_ID = "c-id";
var HYDRATED_CSS = "{visibility:hidden}.hydrated{visibility:inherit}";
var XLINK_NS = "http://www.w3.org/1999/xlink";
var createTime = function(e, t) {
  if (t === void 0) {
    t = "";
  }
  {
    return function() {
      return;
    };
  }
};
var uniqueTime = function(e, t) {
  {
    return function() {
      return;
    };
  }
};
var rootAppliedStyles = new WeakMap();
var registerStyle = function(e, t, r) {
  var n = styles.get(e);
  if (supportsConstructibleStylesheets && r) {
    n = n || new CSSStyleSheet();
    n.replace(t);
  } else {
    n = t;
  }
  styles.set(e, n);
};
var addStyle = function(e, t, r, n) {
  var a = getScopeId(t, r);
  var o = styles.get(a);
  e = e.nodeType === 11 ? e : doc;
  if (o) {
    if (typeof o === "string") {
      e = e.head || e;
      var s = rootAppliedStyles.get(e);
      var i = void 0;
      if (!s) {
        rootAppliedStyles.set(e, s = new Set());
      }
      if (!s.has(a)) {
        if (e.host && (i = e.querySelector("[" + HYDRATED_STYLE_ID + '="' + a + '"]'))) {
          i.innerHTML = o;
        } else {
          if (plt.$cssShim$) {
            i = plt.$cssShim$.createHostStyle(n, a, o, !!(t.$flags$ & 10));
            var l = i["s-sc"];
            if (l) {
              a = l;
              s = null;
            }
          } else {
            i = doc.createElement("style");
            i.innerHTML = o;
          }
          e.insertBefore(i, e.querySelector("link"));
        }
        if (s) {
          s.add(a);
        }
      }
    } else if (!e.adoptedStyleSheets.includes(o)) {
      e.adoptedStyleSheets = __spreadArray(__spreadArray([], e.adoptedStyleSheets), [o]);
    }
  }
  return a;
};
var attachStyles = function(e) {
  var t = e.$cmpMeta$;
  var r = e.$hostElement$;
  var n = t.$flags$;
  var a = createTime("attachStyles", t.$tagName$);
  var o = addStyle(supportsShadow && r.shadowRoot ? r.shadowRoot : r.getRootNode(), t, e.$modeName$, r);
  if (n & 10) {
    r["s-sc"] = o;
    r.classList.add(o + "-h");
    if (n & 2) {
      r.classList.add(o + "-s");
    }
  }
  a();
};
var getScopeId = function(e, t) {
  return "sc-" + (t && e.$flags$ & 32 ? e.$tagName$ + "-" + t : e.$tagName$);
};
var convertScopedToShadow = function(e) {
  return e.replace(/\/\*!@([^\/]+)\*\/[^\{]+\{/g, "$1{");
};
var computeMode = function(e) {
  return modeResolutionChain.map(function(t) {
    return t(e);
  }).find(function(e2) {
    return !!e2;
  });
};
var setMode = function(e) {
  return modeResolutionChain.push(e);
};
var getMode = function(e) {
  return getHostRef(e).$modeName$;
};
var EMPTY_OBJ = {};
var SVG_NS = "http://www.w3.org/2000/svg";
var HTML_NS = "http://www.w3.org/1999/xhtml";
var isDef = function(e) {
  return e != null;
};
var isComplexType = function(e) {
  e = typeof e;
  return e === "object" || e === "function";
};
var h = function(e, t) {
  var r = [];
  for (var n = 2; n < arguments.length; n++) {
    r[n - 2] = arguments[n];
  }
  var a = null;
  var o = null;
  var s = null;
  var i = false;
  var l = false;
  var $ = [];
  var c = function(t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      a = t2[r2];
      if (Array.isArray(a)) {
        c(a);
      } else if (a != null && typeof a !== "boolean") {
        if (i = typeof e !== "function" && !isComplexType(a)) {
          a = String(a);
        }
        if (i && l) {
          $[$.length - 1].$text$ += a;
        } else {
          $.push(i ? newVNode(null, a) : a);
        }
        l = i;
      }
    }
  };
  c(r);
  if (t) {
    if (t.key) {
      o = t.key;
    }
    if (t.name) {
      s = t.name;
    }
    {
      var f = t.className || t.class;
      if (f) {
        t.class = typeof f !== "object" ? f : Object.keys(f).filter(function(e2) {
          return f[e2];
        }).join(" ");
      }
    }
  }
  if (typeof e === "function") {
    return e(t === null ? {} : t, $, vdomFnUtils);
  }
  var u = newVNode(e, null);
  u.$attrs$ = t;
  if ($.length > 0) {
    u.$children$ = $;
  }
  {
    u.$key$ = o;
  }
  {
    u.$name$ = s;
  }
  return u;
};
var newVNode = function(e, t) {
  var r = { $flags$: 0, $tag$: e, $text$: t, $elm$: null, $children$: null };
  {
    r.$attrs$ = null;
  }
  {
    r.$key$ = null;
  }
  {
    r.$name$ = null;
  }
  return r;
};
var Host = {};
var isHost = function(e) {
  return e && e.$tag$ === Host;
};
var vdomFnUtils = { forEach: function(e, t) {
  return e.map(convertToPublic).forEach(t);
}, map: function(e, t) {
  return e.map(convertToPublic).map(t).map(convertToPrivate);
} };
var convertToPublic = function(e) {
  return { vattrs: e.$attrs$, vchildren: e.$children$, vkey: e.$key$, vname: e.$name$, vtag: e.$tag$, vtext: e.$text$ };
};
var convertToPrivate = function(e) {
  if (typeof e.vtag === "function") {
    var t = Object.assign({}, e.vattrs);
    if (e.vkey) {
      t.key = e.vkey;
    }
    if (e.vname) {
      t.name = e.vname;
    }
    return h.apply(void 0, __spreadArray([e.vtag, t], e.vchildren || []));
  }
  var r = newVNode(e.vtag, e.vtext);
  r.$attrs$ = e.vattrs;
  r.$children$ = e.vchildren;
  r.$key$ = e.vkey;
  r.$name$ = e.vname;
  return r;
};
var setAccessor = function(e, t, r, n, a, o) {
  if (r !== n) {
    var s = isMemberInElement(e, t);
    var i = t.toLowerCase();
    if (t === "class") {
      var l = e.classList;
      var $ = parseClassList(r);
      var c = parseClassList(n);
      l.remove.apply(l, $.filter(function(e2) {
        return e2 && !c.includes(e2);
      }));
      l.add.apply(l, c.filter(function(e2) {
        return e2 && !$.includes(e2);
      }));
    } else if (t === "style") {
      {
        for (var f in r) {
          if (!n || n[f] == null) {
            if (f.includes("-")) {
              e.style.removeProperty(f);
            } else {
              e.style[f] = "";
            }
          }
        }
      }
      for (var f in n) {
        if (!r || n[f] !== r[f]) {
          if (f.includes("-")) {
            e.style.setProperty(f, n[f]);
          } else {
            e.style[f] = n[f];
          }
        }
      }
    } else if (t === "key")
      ;
    else if (t === "ref") {
      if (n) {
        n(e);
      }
    } else if (!s && t[0] === "o" && t[1] === "n") {
      if (t[2] === "-") {
        t = t.slice(3);
      } else if (isMemberInElement(win, i)) {
        t = i.slice(2);
      } else {
        t = i[2] + t.slice(3);
      }
      if (r) {
        plt.rel(e, t, r, false);
      }
      if (n) {
        plt.ael(e, t, n, false);
      }
    } else {
      var u = isComplexType(n);
      if ((s || u && n !== null) && !a) {
        try {
          if (!e.tagName.includes("-")) {
            var d = n == null ? "" : n;
            if (t === "list") {
              s = false;
            } else if (r == null || e[t] != d) {
              e[t] = d;
            }
          } else {
            e[t] = n;
          }
        } catch (p) {
        }
      }
      var v = false;
      {
        if (i !== (i = i.replace(/^xlink\:?/, ""))) {
          t = i;
          v = true;
        }
      }
      if (n == null || n === false) {
        if (n !== false || e.getAttribute(t) === "") {
          if (v) {
            e.removeAttributeNS(XLINK_NS, t);
          } else {
            e.removeAttribute(t);
          }
        }
      } else if ((!s || o & 4 || a) && !u) {
        n = n === true ? "" : n;
        if (v) {
          e.setAttributeNS(XLINK_NS, t, n);
        } else {
          e.setAttribute(t, n);
        }
      }
    }
  }
};
var parseClassListRegex = /\s/;
var parseClassList = function(e) {
  return !e ? [] : e.split(parseClassListRegex);
};
var updateElement = function(e, t, r, n) {
  var a = t.$elm$.nodeType === 11 && t.$elm$.host ? t.$elm$.host : t.$elm$;
  var o = e && e.$attrs$ || EMPTY_OBJ;
  var s = t.$attrs$ || EMPTY_OBJ;
  {
    for (n in o) {
      if (!(n in s)) {
        setAccessor(a, n, o[n], void 0, r, t.$flags$);
      }
    }
  }
  for (n in s) {
    setAccessor(a, n, o[n], s[n], r, t.$flags$);
  }
};
var createElm = function(e, t, r, n) {
  var a = t.$children$[r];
  var o = 0;
  var s;
  var i;
  var l;
  if (!useNativeShadowDom) {
    checkSlotRelocate = true;
    if (a.$tag$ === "slot") {
      if (scopeId) {
        n.classList.add(scopeId + "-s");
      }
      a.$flags$ |= a.$children$ ? 2 : 1;
    }
  }
  if (a.$text$ !== null) {
    s = a.$elm$ = doc.createTextNode(a.$text$);
  } else if (a.$flags$ & 1) {
    s = a.$elm$ = doc.createTextNode("");
  } else {
    if (!isSvgMode) {
      isSvgMode = a.$tag$ === "svg";
    }
    s = a.$elm$ = doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, a.$flags$ & 2 ? "slot-fb" : a.$tag$);
    if (isSvgMode && a.$tag$ === "foreignObject") {
      isSvgMode = false;
    }
    {
      updateElement(null, a, isSvgMode);
    }
    if (isDef(scopeId) && s["s-si"] !== scopeId) {
      s.classList.add(s["s-si"] = scopeId);
    }
    if (a.$children$) {
      for (o = 0; o < a.$children$.length; ++o) {
        i = createElm(e, a, o, s);
        if (i) {
          s.appendChild(i);
        }
      }
    }
    {
      if (a.$tag$ === "svg") {
        isSvgMode = false;
      } else if (s.tagName === "foreignObject") {
        isSvgMode = true;
      }
    }
  }
  {
    s["s-hn"] = hostTagName;
    if (a.$flags$ & (2 | 1)) {
      s["s-sr"] = true;
      s["s-cr"] = contentRef;
      s["s-sn"] = a.$name$ || "";
      l = e && e.$children$ && e.$children$[r];
      if (l && l.$tag$ === a.$tag$ && e.$elm$) {
        putBackInOriginalLocation(e.$elm$, false);
      }
    }
  }
  return s;
};
var putBackInOriginalLocation = function(e, t) {
  plt.$flags$ |= 1;
  var r = e.childNodes;
  for (var n = r.length - 1; n >= 0; n--) {
    var a = r[n];
    if (a["s-hn"] !== hostTagName && a["s-ol"]) {
      parentReferenceNode(a).insertBefore(a, referenceNode(a));
      a["s-ol"].remove();
      a["s-ol"] = void 0;
      checkSlotRelocate = true;
    }
    if (t) {
      putBackInOriginalLocation(a, t);
    }
  }
  plt.$flags$ &= ~1;
};
var addVnodes = function(e, t, r, n, a, o) {
  var s = e["s-cr"] && e["s-cr"].parentNode || e;
  var i;
  if (s.shadowRoot && s.tagName === hostTagName) {
    s = s.shadowRoot;
  }
  for (; a <= o; ++a) {
    if (n[a]) {
      i = createElm(null, r, a, e);
      if (i) {
        n[a].$elm$ = i;
        s.insertBefore(i, referenceNode(t));
      }
    }
  }
};
var removeVnodes = function(e, t, r, n, a) {
  for (; t <= r; ++t) {
    if (n = e[t]) {
      a = n.$elm$;
      callNodeRefs(n);
      {
        checkSlotFallbackVisibility = true;
        if (a["s-ol"]) {
          a["s-ol"].remove();
        } else {
          putBackInOriginalLocation(a, true);
        }
      }
      a.remove();
    }
  }
};
var updateChildren = function(e, t, r, n) {
  var a = 0;
  var o = 0;
  var s = 0;
  var i = 0;
  var l = t.length - 1;
  var $ = t[0];
  var c = t[l];
  var f = n.length - 1;
  var u = n[0];
  var d = n[f];
  var v;
  var p;
  while (a <= l && o <= f) {
    if ($ == null) {
      $ = t[++a];
    } else if (c == null) {
      c = t[--l];
    } else if (u == null) {
      u = n[++o];
    } else if (d == null) {
      d = n[--f];
    } else if (isSameVnode($, u)) {
      patch($, u);
      $ = t[++a];
      u = n[++o];
    } else if (isSameVnode(c, d)) {
      patch(c, d);
      c = t[--l];
      d = n[--f];
    } else if (isSameVnode($, d)) {
      if ($.$tag$ === "slot" || d.$tag$ === "slot") {
        putBackInOriginalLocation($.$elm$.parentNode, false);
      }
      patch($, d);
      e.insertBefore($.$elm$, c.$elm$.nextSibling);
      $ = t[++a];
      d = n[--f];
    } else if (isSameVnode(c, u)) {
      if ($.$tag$ === "slot" || d.$tag$ === "slot") {
        putBackInOriginalLocation(c.$elm$.parentNode, false);
      }
      patch(c, u);
      e.insertBefore(c.$elm$, $.$elm$);
      c = t[--l];
      u = n[++o];
    } else {
      s = -1;
      {
        for (i = a; i <= l; ++i) {
          if (t[i] && t[i].$key$ !== null && t[i].$key$ === u.$key$) {
            s = i;
            break;
          }
        }
      }
      if (s >= 0) {
        p = t[s];
        if (p.$tag$ !== u.$tag$) {
          v = createElm(t && t[o], r, s, e);
        } else {
          patch(p, u);
          t[s] = void 0;
          v = p.$elm$;
        }
        u = n[++o];
      } else {
        v = createElm(t && t[o], r, o, e);
        u = n[++o];
      }
      if (v) {
        {
          parentReferenceNode($.$elm$).insertBefore(v, referenceNode($.$elm$));
        }
      }
    }
  }
  if (a > l) {
    addVnodes(e, n[f + 1] == null ? null : n[f + 1].$elm$, r, n, o, f);
  } else if (o > f) {
    removeVnodes(t, a, l);
  }
};
var isSameVnode = function(e, t) {
  if (e.$tag$ === t.$tag$) {
    if (e.$tag$ === "slot") {
      return e.$name$ === t.$name$;
    }
    {
      return e.$key$ === t.$key$;
    }
  }
  return false;
};
var referenceNode = function(e) {
  return e && e["s-ol"] || e;
};
var parentReferenceNode = function(e) {
  return (e["s-ol"] ? e["s-ol"] : e).parentNode;
};
var patch = function(e, t) {
  var r = t.$elm$ = e.$elm$;
  var n = e.$children$;
  var a = t.$children$;
  var o = t.$tag$;
  var s = t.$text$;
  var i;
  if (s === null) {
    {
      isSvgMode = o === "svg" ? true : o === "foreignObject" ? false : isSvgMode;
    }
    {
      if (o === "slot")
        ;
      else {
        updateElement(e, t, isSvgMode);
      }
    }
    if (n !== null && a !== null) {
      updateChildren(r, n, t, a);
    } else if (a !== null) {
      if (e.$text$ !== null) {
        r.textContent = "";
      }
      addVnodes(r, null, t, a, 0, a.length - 1);
    } else if (n !== null) {
      removeVnodes(n, 0, n.length - 1);
    }
    if (isSvgMode && o === "svg") {
      isSvgMode = false;
    }
  } else if (i = r["s-cr"]) {
    i.parentNode.textContent = s;
  } else if (e.$text$ !== s) {
    r.data = s;
  }
};
var updateFallbackSlotVisibility = function(e) {
  var t = e.childNodes;
  var r;
  var n;
  var a;
  var o;
  var s;
  var i;
  for (n = 0, a = t.length; n < a; n++) {
    r = t[n];
    if (r.nodeType === 1) {
      if (r["s-sr"]) {
        s = r["s-sn"];
        r.hidden = false;
        for (o = 0; o < a; o++) {
          i = t[o].nodeType;
          if (t[o]["s-hn"] !== r["s-hn"] || s !== "") {
            if (i === 1 && s === t[o].getAttribute("slot")) {
              r.hidden = true;
              break;
            }
          } else {
            if (i === 1 || i === 3 && t[o].textContent.trim() !== "") {
              r.hidden = true;
              break;
            }
          }
        }
      }
      updateFallbackSlotVisibility(r);
    }
  }
};
var relocateNodes = [];
var relocateSlotContent = function(e) {
  var t;
  var r;
  var n;
  var a;
  var o;
  var s;
  var i = 0;
  var l = e.childNodes;
  var $ = l.length;
  for (; i < $; i++) {
    t = l[i];
    if (t["s-sr"] && (r = t["s-cr"]) && r.parentNode) {
      n = r.parentNode.childNodes;
      a = t["s-sn"];
      for (s = n.length - 1; s >= 0; s--) {
        r = n[s];
        if (!r["s-cn"] && !r["s-nr"] && r["s-hn"] !== t["s-hn"]) {
          if (isNodeLocatedInSlot(r, a)) {
            o = relocateNodes.find(function(e2) {
              return e2.$nodeToRelocate$ === r;
            });
            checkSlotFallbackVisibility = true;
            r["s-sn"] = r["s-sn"] || a;
            if (o) {
              o.$slotRefNode$ = t;
            } else {
              relocateNodes.push({ $slotRefNode$: t, $nodeToRelocate$: r });
            }
            if (r["s-sr"]) {
              relocateNodes.map(function(e2) {
                if (isNodeLocatedInSlot(e2.$nodeToRelocate$, r["s-sn"])) {
                  o = relocateNodes.find(function(e3) {
                    return e3.$nodeToRelocate$ === r;
                  });
                  if (o && !e2.$slotRefNode$) {
                    e2.$slotRefNode$ = o.$slotRefNode$;
                  }
                }
              });
            }
          } else if (!relocateNodes.some(function(e2) {
            return e2.$nodeToRelocate$ === r;
          })) {
            relocateNodes.push({ $nodeToRelocate$: r });
          }
        }
      }
    }
    if (t.nodeType === 1) {
      relocateSlotContent(t);
    }
  }
};
var isNodeLocatedInSlot = function(e, t) {
  if (e.nodeType === 1) {
    if (e.getAttribute("slot") === null && t === "") {
      return true;
    }
    if (e.getAttribute("slot") === t) {
      return true;
    }
    return false;
  }
  if (e["s-sn"] === t) {
    return true;
  }
  return t === "";
};
var callNodeRefs = function(e) {
  {
    e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null);
    e.$children$ && e.$children$.map(callNodeRefs);
  }
};
var renderVdom = function(e, t) {
  var r = e.$hostElement$;
  var n = e.$cmpMeta$;
  var a = e.$vnode$ || newVNode(null, null);
  var o = isHost(t) ? t : h(null, null, t);
  hostTagName = r.tagName;
  if (n.$attrsToReflect$) {
    o.$attrs$ = o.$attrs$ || {};
    n.$attrsToReflect$.map(function(e2) {
      var t2 = e2[0], n2 = e2[1];
      return o.$attrs$[n2] = r[t2];
    });
  }
  o.$tag$ = null;
  o.$flags$ |= 4;
  e.$vnode$ = o;
  o.$elm$ = a.$elm$ = r.shadowRoot || r;
  {
    scopeId = r["s-sc"];
  }
  {
    contentRef = r["s-cr"];
    useNativeShadowDom = supportsShadow && (n.$flags$ & 1) !== 0;
    checkSlotFallbackVisibility = false;
  }
  patch(a, o);
  {
    plt.$flags$ |= 1;
    if (checkSlotRelocate) {
      relocateSlotContent(o.$elm$);
      var s = void 0;
      var i = void 0;
      var l = void 0;
      var $ = void 0;
      var c = void 0;
      var f = void 0;
      var u = 0;
      for (; u < relocateNodes.length; u++) {
        s = relocateNodes[u];
        i = s.$nodeToRelocate$;
        if (!i["s-ol"]) {
          l = doc.createTextNode("");
          l["s-nr"] = i;
          i.parentNode.insertBefore(i["s-ol"] = l, i);
        }
      }
      for (u = 0; u < relocateNodes.length; u++) {
        s = relocateNodes[u];
        i = s.$nodeToRelocate$;
        if (s.$slotRefNode$) {
          $ = s.$slotRefNode$.parentNode;
          c = s.$slotRefNode$.nextSibling;
          l = i["s-ol"];
          while (l = l.previousSibling) {
            f = l["s-nr"];
            if (f && f["s-sn"] === i["s-sn"] && $ === f.parentNode) {
              f = f.nextSibling;
              if (!f || !f["s-nr"]) {
                c = f;
                break;
              }
            }
          }
          if (!c && $ !== i.parentNode || i.nextSibling !== c) {
            if (i !== c) {
              if (!i["s-hn"] && i["s-ol"]) {
                i["s-hn"] = i["s-ol"].parentNode.nodeName;
              }
              $.insertBefore(i, c);
            }
          }
        } else {
          if (i.nodeType === 1) {
            i.hidden = true;
          }
        }
      }
    }
    if (checkSlotFallbackVisibility) {
      updateFallbackSlotVisibility(o.$elm$);
    }
    plt.$flags$ &= ~1;
    relocateNodes.length = 0;
  }
};
var emitEvent = function(e, t, r) {
  var n = plt.ce(t, r);
  e.dispatchEvent(n);
  return n;
};
var attachToAncestor = function(e, t) {
  if (t && !e.$onRenderResolve$ && t["s-p"]) {
    t["s-p"].push(new Promise(function(t2) {
      return e.$onRenderResolve$ = t2;
    }));
  }
};
var scheduleUpdate = function(e, t) {
  {
    e.$flags$ |= 16;
  }
  if (e.$flags$ & 4) {
    e.$flags$ |= 512;
    return;
  }
  attachToAncestor(e, e.$ancestorComponent$);
  var r = function() {
    return dispatchHooks(e, t);
  };
  return writeTask(r);
};
var dispatchHooks = function(e, t) {
  var r = createTime("scheduleUpdate", e.$cmpMeta$.$tagName$);
  var n = e.$lazyInstance$;
  var a;
  if (t) {
    {
      e.$flags$ |= 256;
      if (e.$queuedListeners$) {
        e.$queuedListeners$.map(function(e2) {
          var t2 = e2[0], r2 = e2[1];
          return safeCall(n, t2, r2);
        });
        e.$queuedListeners$ = null;
      }
    }
    {
      a = safeCall(n, "componentWillLoad");
    }
  }
  {
    a = then(a, function() {
      return safeCall(n, "componentWillRender");
    });
  }
  r();
  return then(a, function() {
    return updateComponent(e, n, t);
  });
};
var updateComponent = function(e, t, r) {
  return __awaiter(void 0, void 0, void 0, function() {
    var n, a, o, s, i, l;
    return __generator(this, function($) {
      n = e.$hostElement$;
      a = createTime("update", e.$cmpMeta$.$tagName$);
      o = n["s-rc"];
      if (r) {
        attachStyles(e);
      }
      s = createTime("render", e.$cmpMeta$.$tagName$);
      {
        callRender(e, t);
      }
      if (plt.$cssShim$) {
        plt.$cssShim$.updateHost(n);
      }
      if (o) {
        o.map(function(e2) {
          return e2();
        });
        n["s-rc"] = void 0;
      }
      s();
      a();
      {
        i = n["s-p"];
        l = function() {
          return postUpdateComponent(e);
        };
        if (i.length === 0) {
          l();
        } else {
          Promise.all(i).then(l);
          e.$flags$ |= 4;
          i.length = 0;
        }
      }
      return [2];
    });
  });
};
var callRender = function(e, t, r) {
  try {
    t = t.render && t.render();
    {
      e.$flags$ &= ~16;
    }
    {
      e.$flags$ |= 2;
    }
    {
      {
        {
          renderVdom(e, t);
        }
      }
    }
  } catch (n) {
    consoleError(n, e.$hostElement$);
  }
  return null;
};
var postUpdateComponent = function(e) {
  var t = e.$cmpMeta$.$tagName$;
  var r = e.$hostElement$;
  var n = createTime("postUpdate", t);
  var a = e.$lazyInstance$;
  var o = e.$ancestorComponent$;
  if (!(e.$flags$ & 64)) {
    e.$flags$ |= 64;
    {
      addHydratedFlag(r);
    }
    {
      safeCall(a, "componentDidLoad");
    }
    n();
    {
      e.$onReadyResolve$(r);
      if (!o) {
        appDidLoad();
      }
    }
  } else {
    {
      safeCall(a, "componentDidUpdate");
    }
    n();
  }
  {
    e.$onInstanceResolve$(r);
  }
  {
    if (e.$onRenderResolve$) {
      e.$onRenderResolve$();
      e.$onRenderResolve$ = void 0;
    }
    if (e.$flags$ & 512) {
      nextTick(function() {
        return scheduleUpdate(e, false);
      });
    }
    e.$flags$ &= ~(4 | 512);
  }
};
var appDidLoad = function(e) {
  {
    addHydratedFlag(doc.documentElement);
  }
  nextTick(function() {
    return emitEvent(win, "appload", { detail: { namespace: NAMESPACE } });
  });
};
var safeCall = function(e, t, r) {
  if (e && e[t]) {
    try {
      return e[t](r);
    } catch (n) {
      consoleError(n);
    }
  }
  return void 0;
};
var then = function(e, t) {
  return e && e.then ? e.then(t) : t();
};
var addHydratedFlag = function(e) {
  return e.classList.add("hydrated");
};
var initializeClientHydrate = function(e, t, r, n) {
  var a = createTime("hydrateClient", t);
  var o = e.shadowRoot;
  var s = [];
  var i = [];
  var l = o ? [] : null;
  var $ = n.$vnode$ = newVNode(t, null);
  if (!plt.$orgLocNodes$) {
    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map());
  }
  e[HYDRATE_ID] = r;
  e.removeAttribute(HYDRATE_ID);
  clientHydrate($, s, i, l, e, e, r);
  s.map(function(e2) {
    var r2 = e2.$hostId$ + "." + e2.$nodeId$;
    var n2 = plt.$orgLocNodes$.get(r2);
    var a2 = e2.$elm$;
    if (n2 && supportsShadow && n2["s-en"] === "") {
      n2.parentNode.insertBefore(a2, n2.nextSibling);
    }
    if (!o) {
      a2["s-hn"] = t;
      if (n2) {
        a2["s-ol"] = n2;
        a2["s-ol"]["s-nr"] = a2;
      }
    }
    plt.$orgLocNodes$.delete(r2);
  });
  if (o) {
    l.map(function(e2) {
      if (e2) {
        o.appendChild(e2);
      }
    });
  }
  a();
};
var clientHydrate = function(e, t, r, n, a, o, s) {
  var i;
  var l;
  var $;
  var c;
  if (o.nodeType === 1) {
    i = o.getAttribute(HYDRATE_CHILD_ID);
    if (i) {
      l = i.split(".");
      if (l[0] === s || l[0] === "0") {
        $ = { $flags$: 0, $hostId$: l[0], $nodeId$: l[1], $depth$: l[2], $index$: l[3], $tag$: o.tagName.toLowerCase(), $elm$: o, $attrs$: null, $children$: null, $key$: null, $name$: null, $text$: null };
        t.push($);
        o.removeAttribute(HYDRATE_CHILD_ID);
        if (!e.$children$) {
          e.$children$ = [];
        }
        e.$children$[$.$index$] = $;
        e = $;
        if (n && $.$depth$ === "0") {
          n[$.$index$] = $.$elm$;
        }
      }
    }
    for (c = o.childNodes.length - 1; c >= 0; c--) {
      clientHydrate(e, t, r, n, a, o.childNodes[c], s);
    }
    if (o.shadowRoot) {
      for (c = o.shadowRoot.childNodes.length - 1; c >= 0; c--) {
        clientHydrate(e, t, r, n, a, o.shadowRoot.childNodes[c], s);
      }
    }
  } else if (o.nodeType === 8) {
    l = o.nodeValue.split(".");
    if (l[1] === s || l[1] === "0") {
      i = l[0];
      $ = { $flags$: 0, $hostId$: l[1], $nodeId$: l[2], $depth$: l[3], $index$: l[4], $elm$: o, $attrs$: null, $children$: null, $key$: null, $name$: null, $tag$: null, $text$: null };
      if (i === TEXT_NODE_ID) {
        $.$elm$ = o.nextSibling;
        if ($.$elm$ && $.$elm$.nodeType === 3) {
          $.$text$ = $.$elm$.textContent;
          t.push($);
          o.remove();
          if (!e.$children$) {
            e.$children$ = [];
          }
          e.$children$[$.$index$] = $;
          if (n && $.$depth$ === "0") {
            n[$.$index$] = $.$elm$;
          }
        }
      } else if ($.$hostId$ === s) {
        if (i === SLOT_NODE_ID) {
          $.$tag$ = "slot";
          if (l[5]) {
            o["s-sn"] = $.$name$ = l[5];
          } else {
            o["s-sn"] = "";
          }
          o["s-sr"] = true;
          if (n) {
            $.$elm$ = doc.createElement($.$tag$);
            if ($.$name$) {
              $.$elm$.setAttribute("name", $.$name$);
            }
            o.parentNode.insertBefore($.$elm$, o);
            o.remove();
            if ($.$depth$ === "0") {
              n[$.$index$] = $.$elm$;
            }
          }
          r.push($);
          if (!e.$children$) {
            e.$children$ = [];
          }
          e.$children$[$.$index$] = $;
        } else if (i === CONTENT_REF_ID) {
          if (n) {
            o.remove();
          } else {
            a["s-cr"] = o;
            o["s-cn"] = true;
          }
        }
      }
    }
  } else if (e && e.$tag$ === "style") {
    var f = newVNode(null, o.textContent);
    f.$elm$ = o;
    f.$index$ = "0";
    e.$children$ = [f];
  }
};
var initializeDocumentHydrate = function(e, t) {
  if (e.nodeType === 1) {
    var r = 0;
    for (; r < e.childNodes.length; r++) {
      initializeDocumentHydrate(e.childNodes[r], t);
    }
    if (e.shadowRoot) {
      for (r = 0; r < e.shadowRoot.childNodes.length; r++) {
        initializeDocumentHydrate(e.shadowRoot.childNodes[r], t);
      }
    }
  } else if (e.nodeType === 8) {
    var n = e.nodeValue.split(".");
    if (n[0] === ORG_LOCATION_ID) {
      t.set(n[1] + "." + n[2], e);
      e.nodeValue = "";
      e["s-en"] = n[3];
    }
  }
};
var parsePropertyValue = function(e, t) {
  if (e != null && !isComplexType(e)) {
    if (t & 4) {
      return e === "false" ? false : e === "" || !!e;
    }
    if (t & 2) {
      return parseFloat(e);
    }
    if (t & 1) {
      return String(e);
    }
    return e;
  }
  return e;
};
var getValue = function(e, t) {
  return getHostRef(e).$instanceValues$.get(t);
};
var setValue = function(e, t, r, n) {
  var a = getHostRef(e);
  var o = a.$hostElement$;
  var s = a.$instanceValues$.get(t);
  var i = a.$flags$;
  var l = a.$lazyInstance$;
  r = parsePropertyValue(r, n.$members$[t][0]);
  if ((!(i & 8) || s === void 0) && r !== s) {
    a.$instanceValues$.set(t, r);
    if (l) {
      if (n.$watchers$ && i & 128) {
        var $ = n.$watchers$[t];
        if ($) {
          $.map(function(e2) {
            try {
              l[e2](r, s, t);
            } catch (n2) {
              consoleError(n2, o);
            }
          });
        }
      }
      if ((i & (2 | 16)) === 2) {
        scheduleUpdate(a, false);
      }
    }
  }
};
var proxyComponent = function(e, t, r) {
  if (t.$members$) {
    if (e.watchers) {
      t.$watchers$ = e.watchers;
    }
    var n = Object.entries(t.$members$);
    var a = e.prototype;
    n.map(function(e2) {
      var n2 = e2[0], o2 = e2[1][0];
      if (o2 & 31 || r & 2 && o2 & 32) {
        Object.defineProperty(a, n2, { get: function() {
          return getValue(this, n2);
        }, set: function(e3) {
          setValue(this, n2, e3, t);
        }, configurable: true, enumerable: true });
      } else if (r & 1 && o2 & 64) {
        Object.defineProperty(a, n2, { value: function() {
          var e3 = [];
          for (var t2 = 0; t2 < arguments.length; t2++) {
            e3[t2] = arguments[t2];
          }
          var r2 = getHostRef(this);
          return r2.$onInstancePromise$.then(function() {
            var t3;
            return (t3 = r2.$lazyInstance$)[n2].apply(t3, e3);
          });
        } });
      }
    });
    if (r & 1) {
      var o = new Map();
      a.attributeChangedCallback = function(e2, t2, r2) {
        var n2 = this;
        plt.jmp(function() {
          var t3 = o.get(e2);
          n2[t3] = r2 === null && typeof n2[t3] === "boolean" ? false : r2;
        });
      };
      e.observedAttributes = n.filter(function(e2) {
        var t2 = e2[0], r2 = e2[1];
        return r2[0] & 15;
      }).map(function(e2) {
        var r2 = e2[0], n2 = e2[1];
        var a2 = n2[1] || r2;
        o.set(a2, r2);
        if (n2[0] & 512) {
          t.$attrsToReflect$.push([r2, a2]);
        }
        return a2;
      });
    }
  }
  return e;
};
var initializeComponent = function(e, t, r, n, a) {
  return __awaiter(void 0, void 0, void 0, function() {
    var n2, o, s, i, l, $, c;
    return __generator(this, function(f) {
      switch (f.label) {
        case 0:
          if (!((t.$flags$ & 32) === 0))
            return [3, 5];
          t.$flags$ |= 32;
          a = loadModule(r);
          if (!a.then)
            return [3, 2];
          n2 = uniqueTime();
          return [4, a];
        case 1:
          a = f.sent();
          n2();
          f.label = 2;
        case 2:
          if (!a.isProxied) {
            {
              r.$watchers$ = a.watchers;
            }
            proxyComponent(a, r, 2);
            a.isProxied = true;
          }
          o = createTime("createInstance", r.$tagName$);
          {
            t.$flags$ |= 8;
          }
          try {
            new a(t);
          } catch (u) {
            consoleError(u);
          }
          {
            t.$flags$ &= ~8;
          }
          {
            t.$flags$ |= 128;
          }
          o();
          fireConnectedCallback(t.$lazyInstance$);
          if (!a.style)
            return [3, 5];
          s = a.style;
          if (typeof s !== "string") {
            s = s[t.$modeName$ = computeMode(e)];
          }
          i = getScopeId(r, t.$modeName$);
          if (!!styles.has(i))
            return [3, 5];
          l = createTime("registerStyles", r.$tagName$);
          if (!(r.$flags$ & 8))
            return [3, 4];
          return [4, import("./shadow-css-a3f00b33-WKFCL3Q7.js").then(function(e2) {
            return e2.scopeCss(s, i, false);
          })];
        case 3:
          s = f.sent();
          f.label = 4;
        case 4:
          registerStyle(i, s, !!(r.$flags$ & 1));
          l();
          f.label = 5;
        case 5:
          $ = t.$ancestorComponent$;
          c = function() {
            return scheduleUpdate(t, true);
          };
          if ($ && $["s-rc"]) {
            $["s-rc"].push(c);
          } else {
            c();
          }
          return [2];
      }
    });
  });
};
var fireConnectedCallback = function(e) {
  {
    safeCall(e, "connectedCallback");
  }
};
var connectedCallback = function(e) {
  if ((plt.$flags$ & 1) === 0) {
    var t = getHostRef(e);
    var r = t.$cmpMeta$;
    var n = createTime("connectedCallback", r.$tagName$);
    if (!(t.$flags$ & 1)) {
      t.$flags$ |= 1;
      var a = void 0;
      {
        a = e.getAttribute(HYDRATE_ID);
        if (a) {
          if (supportsShadow && r.$flags$ & 1) {
            var o = addStyle(e.shadowRoot, r, e.getAttribute("s-mode"));
            e.classList.remove(o + "-h", o + "-s");
          }
          initializeClientHydrate(e, r.$tagName$, a, t);
        }
      }
      if (!a) {
        if (r.$flags$ & (4 | 8)) {
          setContentReference(e);
        }
      }
      {
        var s = e;
        while (s = s.parentNode || s.host) {
          if (s.nodeType === 1 && s.hasAttribute("s-id") && s["s-p"] || s["s-p"]) {
            attachToAncestor(t, t.$ancestorComponent$ = s);
            break;
          }
        }
      }
      if (r.$members$) {
        Object.entries(r.$members$).map(function(t2) {
          var r2 = t2[0], n2 = t2[1][0];
          if (n2 & 31 && e.hasOwnProperty(r2)) {
            var a2 = e[r2];
            delete e[r2];
            e[r2] = a2;
          }
        });
      }
      {
        nextTick(function() {
          return initializeComponent(e, t, r);
        });
      }
    } else {
      addHostEventListeners(e, t, r.$listeners$);
      fireConnectedCallback(t.$lazyInstance$);
    }
    n();
  }
};
var setContentReference = function(e) {
  var t = e["s-cr"] = doc.createComment("");
  t["s-cn"] = true;
  e.insertBefore(t, e.firstChild);
};
var disconnectedCallback = function(e) {
  if ((plt.$flags$ & 1) === 0) {
    var t = getHostRef(e);
    var r = t.$lazyInstance$;
    {
      if (t.$rmListeners$) {
        t.$rmListeners$.map(function(e2) {
          return e2();
        });
        t.$rmListeners$ = void 0;
      }
    }
    if (plt.$cssShim$) {
      plt.$cssShim$.removeHost(e);
    }
    {
      safeCall(r, "disconnectedCallback");
    }
  }
};
var bootstrapLazy = function(e, t) {
  if (t === void 0) {
    t = {};
  }
  var r = createTime();
  var n = [];
  var a = t.exclude || [];
  var o = win.customElements;
  var s = doc.head;
  var i = s.querySelector("meta[charset]");
  var l = doc.createElement("style");
  var $ = [];
  var c = doc.querySelectorAll("[" + HYDRATED_STYLE_ID + "]");
  var f;
  var u = true;
  var d = 0;
  Object.assign(plt, t);
  plt.$resourcesUrl$ = new URL(t.resourcesUrl || "./", doc.baseURI).href;
  {
    plt.$flags$ |= 2;
  }
  {
    for (; d < c.length; d++) {
      registerStyle(c[d].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(c[d].innerHTML), true);
    }
  }
  e.map(function(e2) {
    return e2[1].map(function(t2) {
      var r2 = { $flags$: t2[0], $tagName$: t2[1], $members$: t2[2], $listeners$: t2[3] };
      {
        r2.$members$ = t2[2];
      }
      {
        r2.$listeners$ = t2[3];
      }
      {
        r2.$attrsToReflect$ = [];
      }
      {
        r2.$watchers$ = {};
      }
      if (!supportsShadow && r2.$flags$ & 1) {
        r2.$flags$ |= 8;
      }
      var s2 = r2.$tagName$;
      var i2 = function(e3) {
        __extends(t3, e3);
        function t3(t4) {
          var n2 = e3.call(this, t4) || this;
          t4 = n2;
          registerHost(t4, r2);
          if (r2.$flags$ & 1) {
            if (supportsShadow) {
              {
                t4.attachShadow({ mode: "open", delegatesFocus: !!(r2.$flags$ & 16) });
              }
            } else if (!("shadowRoot" in t4)) {
              t4.shadowRoot = t4;
            }
          }
          return n2;
        }
        t3.prototype.connectedCallback = function() {
          var e4 = this;
          if (f) {
            clearTimeout(f);
            f = null;
          }
          if (u) {
            $.push(this);
          } else {
            plt.jmp(function() {
              return connectedCallback(e4);
            });
          }
        };
        t3.prototype.disconnectedCallback = function() {
          var e4 = this;
          plt.jmp(function() {
            return disconnectedCallback(e4);
          });
        };
        t3.prototype.componentOnReady = function() {
          return getHostRef(this).$onReadyPromise$;
        };
        return t3;
      }(HTMLElement);
      r2.$lazyBundleId$ = e2[0];
      if (!a.includes(s2) && !o.get(s2)) {
        n.push(s2);
        o.define(s2, proxyComponent(i2, r2, 1));
      }
    });
  });
  {
    l.innerHTML = n + HYDRATED_CSS;
    l.setAttribute("data-styles", "");
    s.insertBefore(l, i ? i.nextSibling : s.firstChild);
  }
  u = false;
  if ($.length) {
    $.map(function(e2) {
      return e2.connectedCallback();
    });
  } else {
    {
      plt.jmp(function() {
        return f = setTimeout(appDidLoad, 30);
      });
    }
  }
  r();
};
var hostRefs = new WeakMap();
var getHostRef = function(e) {
  return hostRefs.get(e);
};
var registerHost = function(e, t) {
  var r = { $flags$: 0, $hostElement$: e, $cmpMeta$: t, $instanceValues$: new Map() };
  {
    r.$onInstancePromise$ = new Promise(function(e2) {
      return r.$onInstanceResolve$ = e2;
    });
  }
  {
    r.$onReadyPromise$ = new Promise(function(e2) {
      return r.$onReadyResolve$ = e2;
    });
    e["s-p"] = [];
    e["s-rc"] = [];
  }
  addHostEventListeners(e, r, t.$listeners$);
  return hostRefs.set(e, r);
};
var isMemberInElement = function(e, t) {
  return t in e;
};
var consoleError = function(e, t) {
  return (0, console.error)(e, t);
};
var cmpModules = new Map();
var loadModule = function(e, t, r) {
  var n = e.$tagName$.replace(/-/g, "_");
  var a = e.$lazyBundleId$;
  var o = cmpModules.get(a);
  if (o) {
    return o[n];
  }
  return import("./" + a + ".entry.js").then(function(e2) {
    {
      cmpModules.set(a, e2);
    }
    return e2[n];
  }, consoleError);
};
var styles = new Map();
var modeResolutionChain = [];
var queueDomReads = [];
var queueDomWrites = [];
var queueTask = function(e, t) {
  return function(r) {
    e.push(r);
    if (!queuePending) {
      queuePending = true;
      if (t && plt.$flags$ & 4) {
        nextTick(flush);
      } else {
        plt.raf(flush);
      }
    }
  };
};
var consume = function(e) {
  for (var t = 0; t < e.length; t++) {
    try {
      e[t](performance.now());
    } catch (r) {
      consoleError(r);
    }
  }
  e.length = 0;
};
var flush = function() {
  consume(queueDomReads);
  {
    consume(queueDomWrites);
    if (queuePending = queueDomReads.length > 0) {
      plt.raf(flush);
    }
  }
};
var nextTick = function(e) {
  return promiseResolve().then(e);
};
var readTask = queueTask(queueDomReads, false);
var writeTask = queueTask(queueDomWrites, true);

// ../../../../../Documents/CODE/ION/ION3-Photo/node_modules/@ionic/core/dist/esm-es5/helpers-dd7e4b7b.js
init_define_process_env();
var componentOnReady = function(e, t) {
  if (e.componentOnReady) {
    e.componentOnReady().then(function(e2) {
      return t(e2);
    });
  } else {
    raf(function() {
      return t(e);
    });
  }
};
var raf = function(e) {
  if (typeof __zone_symbol__requestAnimationFrame === "function") {
    return __zone_symbol__requestAnimationFrame(e);
  }
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame(e);
  }
  return setTimeout(e);
};

// ../../../../../Documents/CODE/ION/ION3-Photo/node_modules/@ionic/core/dist/esm-es5/animation-096c6391.js
init_define_process_env();
var animationPrefix;
var processKeyframes = function(e) {
  e.forEach(function(e2) {
    for (var n in e2) {
      if (e2.hasOwnProperty(n)) {
        var r = e2[n];
        if (n === "easing") {
          var t = "animation-timing-function";
          e2[t] = r;
          delete e2[n];
        } else {
          var t = convertCamelCaseToHypen(n);
          if (t !== n) {
            e2[t] = r;
            delete e2[n];
          }
        }
      }
    }
  });
  return e;
};
var convertCamelCaseToHypen = function(e) {
  return e.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
};
var getAnimationPrefix = function(e) {
  if (animationPrefix === void 0) {
    var n = e.style.animationName !== void 0;
    var r = e.style.webkitAnimationName !== void 0;
    animationPrefix = !n && r ? "-webkit-" : "";
  }
  return animationPrefix;
};
var setStyleProperty = function(e, n, r) {
  var t = n.startsWith("animation") ? getAnimationPrefix(e) : "";
  e.style.setProperty(t + n, r);
};
var removeStyleProperty = function(e, n) {
  var r = n.startsWith("animation") ? getAnimationPrefix(e) : "";
  e.style.removeProperty(r + n);
};
var animationEnd = function(e, n) {
  var r;
  var t = { passive: true };
  var a = function() {
    if (r) {
      r();
    }
  };
  var i = function(r2) {
    if (e === r2.target) {
      a();
      n(r2);
    }
  };
  if (e) {
    e.addEventListener("webkitAnimationEnd", i, t);
    e.addEventListener("animationend", i, t);
    r = function() {
      e.removeEventListener("webkitAnimationEnd", i, t);
      e.removeEventListener("animationend", i, t);
    };
  }
  return a;
};
var generateKeyframeRules = function(e) {
  if (e === void 0) {
    e = [];
  }
  return e.map(function(e2) {
    var n = e2.offset;
    var r = [];
    for (var t in e2) {
      if (e2.hasOwnProperty(t) && t !== "offset") {
        r.push(t + ": " + e2[t] + ";");
      }
    }
    return n * 100 + "% { " + r.join(" ") + " }";
  }).join(" ");
};
var keyframeIds = [];
var generateKeyframeName = function(e) {
  var n = keyframeIds.indexOf(e);
  if (n < 0) {
    n = keyframeIds.push(e) - 1;
  }
  return "ion-animation-" + n;
};
var getStyleContainer = function(e) {
  var n = e.getRootNode();
  return n.head || n;
};
var createKeyframeStylesheet = function(e, n, r) {
  var t = getStyleContainer(r);
  var a = getAnimationPrefix(r);
  var i = t.querySelector("#" + e);
  if (i) {
    return i;
  }
  var o = (r.ownerDocument || document).createElement("style");
  o.id = e;
  o.textContent = "@" + a + "keyframes " + e + " { " + n + " } @" + a + "keyframes " + e + "-alt { " + n + " }";
  t.appendChild(o);
  return o;
};
var addClassToArray = function(e, n) {
  if (e === void 0) {
    e = [];
  }
  if (n !== void 0) {
    var r = Array.isArray(n) ? n : [n];
    return __spreadArray(__spreadArray([], e), r);
  }
  return e;
};
var createAnimation = function(e) {
  var n;
  var r;
  var t;
  var a;
  var i;
  var o;
  var f = [];
  var u = [];
  var s = [];
  var v = false;
  var l;
  var c = {};
  var d = [];
  var y = [];
  var m = {};
  var p = 0;
  var h2 = false;
  var g = false;
  var E;
  var P;
  var S;
  var A;
  var C = true;
  var b = false;
  var T = true;
  var k;
  var w;
  var x = e;
  var _ = [];
  var K = [];
  var I = [];
  var D = [];
  var L = [];
  var N = [];
  var R = [];
  var F = [];
  var O = [];
  var W = [];
  var j = typeof AnimationEffect === "function" || typeof window.AnimationEffect === "function";
  var H = typeof Element === "function" && typeof Element.prototype.animate === "function" && j;
  var M = 100;
  var $ = function() {
    return W;
  };
  var q = function(e2) {
    D.forEach(function(n2) {
      n2.destroy(e2);
    });
    z(e2);
    I.length = 0;
    D.length = 0;
    f.length = 0;
    G();
    v = false;
    T = true;
    return w;
  };
  var z = function(e2) {
    J();
    if (e2) {
      Q();
    }
  };
  var Z = function() {
    h2 = false;
    g = false;
    T = true;
    P = void 0;
    S = void 0;
    A = void 0;
    p = 0;
    b = false;
    C = true;
  };
  var B = function(e2, n2) {
    var r2 = n2 && n2.oneTimeCallback ? K : _;
    r2.push({ c: e2, o: n2 });
    return w;
  };
  var G = function() {
    _.length = 0;
    K.length = 0;
    return w;
  };
  var J = function() {
    if (H) {
      W.forEach(function(e3) {
        e3.cancel();
      });
      W.length = 0;
    } else {
      var e2 = I.slice();
      raf(function() {
        e2.forEach(function(e3) {
          removeStyleProperty(e3, "animation-name");
          removeStyleProperty(e3, "animation-duration");
          removeStyleProperty(e3, "animation-timing-function");
          removeStyleProperty(e3, "animation-iteration-count");
          removeStyleProperty(e3, "animation-delay");
          removeStyleProperty(e3, "animation-play-state");
          removeStyleProperty(e3, "animation-fill-mode");
          removeStyleProperty(e3, "animation-direction");
        });
      });
    }
  };
  var Q = function() {
    L.forEach(function(e2) {
      if (e2 && e2.parentNode) {
        e2.parentNode.removeChild(e2);
      }
    });
    L.length = 0;
  };
  var U = function(e2) {
    N.push(e2);
    return w;
  };
  var V = function(e2) {
    R.push(e2);
    return w;
  };
  var X = function(e2) {
    F.push(e2);
    return w;
  };
  var Y = function(e2) {
    O.push(e2);
    return w;
  };
  var ee = function(e2) {
    u = addClassToArray(u, e2);
    return w;
  };
  var ne = function(e2) {
    s = addClassToArray(s, e2);
    return w;
  };
  var re = function(e2) {
    if (e2 === void 0) {
      e2 = {};
    }
    c = e2;
    return w;
  };
  var te = function(e2) {
    if (e2 === void 0) {
      e2 = [];
    }
    for (var n2 = 0, r2 = e2; n2 < r2.length; n2++) {
      var t2 = r2[n2];
      c[t2] = "";
    }
    return w;
  };
  var ae = function(e2) {
    d = addClassToArray(d, e2);
    return w;
  };
  var ie = function(e2) {
    y = addClassToArray(y, e2);
    return w;
  };
  var oe = function(e2) {
    if (e2 === void 0) {
      e2 = {};
    }
    m = e2;
    return w;
  };
  var fe = function(e2) {
    if (e2 === void 0) {
      e2 = [];
    }
    for (var n2 = 0, r2 = e2; n2 < r2.length; n2++) {
      var t2 = r2[n2];
      m[t2] = "";
    }
    return w;
  };
  var ue = function() {
    if (i !== void 0) {
      return i;
    }
    if (l) {
      return l.getFill();
    }
    return "both";
  };
  var se = function() {
    if (P !== void 0) {
      return P;
    }
    if (o !== void 0) {
      return o;
    }
    if (l) {
      return l.getDirection();
    }
    return "normal";
  };
  var ve = function() {
    if (h2) {
      return "linear";
    }
    if (t !== void 0) {
      return t;
    }
    if (l) {
      return l.getEasing();
    }
    return "linear";
  };
  var le = function() {
    if (g) {
      return 0;
    }
    if (S !== void 0) {
      return S;
    }
    if (r !== void 0) {
      return r;
    }
    if (l) {
      return l.getDuration();
    }
    return 0;
  };
  var ce = function() {
    if (a !== void 0) {
      return a;
    }
    if (l) {
      return l.getIterations();
    }
    return 1;
  };
  var de = function() {
    if (A !== void 0) {
      return A;
    }
    if (n !== void 0) {
      return n;
    }
    if (l) {
      return l.getDelay();
    }
    return 0;
  };
  var ye = function() {
    return f;
  };
  var me = function(e2) {
    o = e2;
    Ne(true);
    return w;
  };
  var pe = function(e2) {
    i = e2;
    Ne(true);
    return w;
  };
  var he = function(e2) {
    n = e2;
    Ne(true);
    return w;
  };
  var ge = function(e2) {
    t = e2;
    Ne(true);
    return w;
  };
  var Ee = function(e2) {
    if (!H && e2 === 0) {
      e2 = 1;
    }
    r = e2;
    Ne(true);
    return w;
  };
  var Pe = function(e2) {
    a = e2;
    Ne(true);
    return w;
  };
  var Se = function(e2) {
    l = e2;
    return w;
  };
  var Ae = function(e2) {
    if (e2 != null) {
      if (e2.nodeType === 1) {
        I.push(e2);
      } else if (e2.length >= 0) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          I.push(e2[n2]);
        }
      } else {
        console.error("Invalid addElement value");
      }
    }
    return w;
  };
  var Ce = function(e2) {
    if (e2 != null) {
      if (Array.isArray(e2)) {
        for (var n2 = 0, r2 = e2; n2 < r2.length; n2++) {
          var t2 = r2[n2];
          t2.parent(w);
          D.push(t2);
        }
      } else {
        e2.parent(w);
        D.push(e2);
      }
    }
    return w;
  };
  var be = function(e2) {
    f = e2;
    return w;
  };
  var Te = function() {
    N.forEach(function(e3) {
      return e3();
    });
    R.forEach(function(e3) {
      return e3();
    });
    var e2 = u;
    var n2 = s;
    var r2 = c;
    I.forEach(function(t2) {
      var a2 = t2.classList;
      e2.forEach(function(e3) {
        return a2.add(e3);
      });
      n2.forEach(function(e3) {
        return a2.remove(e3);
      });
      for (var i2 in r2) {
        if (r2.hasOwnProperty(i2)) {
          setStyleProperty(t2, i2, r2[i2]);
        }
      }
    });
  };
  var ke = function() {
    Me();
    F.forEach(function(e3) {
      return e3();
    });
    O.forEach(function(e3) {
      return e3();
    });
    var e2 = C ? 1 : 0;
    var n2 = d;
    var r2 = y;
    var t2 = m;
    I.forEach(function(e3) {
      var a2 = e3.classList;
      n2.forEach(function(e4) {
        return a2.add(e4);
      });
      r2.forEach(function(e4) {
        return a2.remove(e4);
      });
      for (var i2 in t2) {
        if (t2.hasOwnProperty(i2)) {
          setStyleProperty(e3, i2, t2[i2]);
        }
      }
    });
    _.forEach(function(n3) {
      return n3.c(e2, w);
    });
    K.forEach(function(n3) {
      return n3.c(e2, w);
    });
    K.length = 0;
    T = true;
    if (C) {
      b = true;
    }
    C = true;
  };
  var we = function() {
    if (p === 0) {
      return;
    }
    p--;
    if (p === 0) {
      ke();
      if (l) {
        l.animationFinish();
      }
    }
  };
  var xe = function(n2) {
    if (n2 === void 0) {
      n2 = true;
    }
    Q();
    var r2 = processKeyframes(f);
    I.forEach(function(t2) {
      if (r2.length > 0) {
        var a2 = generateKeyframeRules(r2);
        k = e !== void 0 ? e : generateKeyframeName(a2);
        var i2 = createKeyframeStylesheet(k, a2, t2);
        L.push(i2);
        setStyleProperty(t2, "animation-duration", le() + "ms");
        setStyleProperty(t2, "animation-timing-function", ve());
        setStyleProperty(t2, "animation-delay", de() + "ms");
        setStyleProperty(t2, "animation-fill-mode", ue());
        setStyleProperty(t2, "animation-direction", se());
        var o2 = ce() === Infinity ? "infinite" : ce().toString();
        setStyleProperty(t2, "animation-iteration-count", o2);
        setStyleProperty(t2, "animation-play-state", "paused");
        if (n2) {
          setStyleProperty(t2, "animation-name", i2.id + "-alt");
        }
        raf(function() {
          setStyleProperty(t2, "animation-name", i2.id || null);
        });
      }
    });
  };
  var _e = function() {
    I.forEach(function(e2) {
      var n2 = e2.animate(f, { id: x, delay: de(), duration: le(), easing: ve(), iterations: ce(), fill: ue(), direction: se() });
      n2.pause();
      W.push(n2);
    });
    if (W.length > 0) {
      W[0].onfinish = function() {
        we();
      };
    }
  };
  var Ke = function(e2) {
    if (e2 === void 0) {
      e2 = true;
    }
    Te();
    if (f.length > 0) {
      if (H) {
        _e();
      } else {
        xe(e2);
      }
    }
    v = true;
  };
  var Ie = function(e2) {
    e2 = Math.min(Math.max(e2, 0), 0.9999);
    if (H) {
      W.forEach(function(n3) {
        n3.currentTime = n3.effect.getComputedTiming().delay + le() * e2;
        n3.pause();
      });
    } else {
      var n2 = "-" + le() * e2 + "ms";
      I.forEach(function(e3) {
        if (f.length > 0) {
          setStyleProperty(e3, "animation-delay", n2);
          setStyleProperty(e3, "animation-play-state", "paused");
        }
      });
    }
  };
  var De = function(e2) {
    W.forEach(function(e3) {
      e3.effect.updateTiming({ delay: de(), duration: le(), easing: ve(), iterations: ce(), fill: ue(), direction: se() });
    });
    if (e2 !== void 0) {
      Ie(e2);
    }
  };
  var Le = function(e2, n2) {
    if (e2 === void 0) {
      e2 = true;
    }
    raf(function() {
      I.forEach(function(r2) {
        setStyleProperty(r2, "animation-name", k || null);
        setStyleProperty(r2, "animation-duration", le() + "ms");
        setStyleProperty(r2, "animation-timing-function", ve());
        setStyleProperty(r2, "animation-delay", n2 !== void 0 ? "-" + n2 * le() + "ms" : de() + "ms");
        setStyleProperty(r2, "animation-fill-mode", ue() || null);
        setStyleProperty(r2, "animation-direction", se() || null);
        var t2 = ce() === Infinity ? "infinite" : ce().toString();
        setStyleProperty(r2, "animation-iteration-count", t2);
        if (e2) {
          setStyleProperty(r2, "animation-name", k + "-alt");
        }
        raf(function() {
          setStyleProperty(r2, "animation-name", k || null);
        });
      });
    });
  };
  var Ne = function(e2, n2, r2) {
    if (e2 === void 0) {
      e2 = false;
    }
    if (n2 === void 0) {
      n2 = true;
    }
    if (e2) {
      D.forEach(function(t2) {
        t2.update(e2, n2, r2);
      });
    }
    if (H) {
      De(r2);
    } else {
      Le(n2, r2);
    }
    return w;
  };
  var Re = function(e2, n2) {
    if (e2 === void 0) {
      e2 = false;
    }
    D.forEach(function(r2) {
      r2.progressStart(e2, n2);
    });
    We();
    h2 = e2;
    if (!v) {
      Ke();
    } else {
      Ne(false, true, n2);
    }
    return w;
  };
  var Fe = function(e2) {
    D.forEach(function(n2) {
      n2.progressStep(e2);
    });
    Ie(e2);
    return w;
  };
  var Oe = function(e2, n2, r2) {
    h2 = false;
    D.forEach(function(t2) {
      t2.progressEnd(e2, n2, r2);
    });
    if (r2 !== void 0) {
      S = r2;
    }
    b = false;
    C = true;
    if (e2 === 0) {
      P = se() === "reverse" ? "normal" : "reverse";
      if (P === "reverse") {
        C = false;
      }
      if (H) {
        Ne();
        Ie(1 - n2);
      } else {
        A = (1 - n2) * le() * -1;
        Ne(false, false);
      }
    } else if (e2 === 1) {
      if (H) {
        Ne();
        Ie(n2);
      } else {
        A = n2 * le() * -1;
        Ne(false, false);
      }
    }
    if (e2 !== void 0) {
      B(function() {
        S = void 0;
        P = void 0;
        A = void 0;
      }, { oneTimeCallback: true });
      if (!l) {
        Be();
      }
    }
    return w;
  };
  var We = function() {
    if (v) {
      if (H) {
        W.forEach(function(e2) {
          e2.pause();
        });
      } else {
        I.forEach(function(e2) {
          setStyleProperty(e2, "animation-play-state", "paused");
        });
      }
    }
  };
  var je = function() {
    D.forEach(function(e2) {
      e2.pause();
    });
    We();
    return w;
  };
  var He = function() {
    E = void 0;
    we();
  };
  var Me = function() {
    if (E) {
      clearTimeout(E);
    }
  };
  var $e = function() {
    Me();
    raf(function() {
      I.forEach(function(e3) {
        if (f.length > 0) {
          setStyleProperty(e3, "animation-play-state", "running");
        }
      });
    });
    if (f.length === 0 || I.length === 0) {
      we();
    } else {
      var e2 = de() || 0;
      var n2 = le() || 0;
      var r2 = ce() || 1;
      if (isFinite(r2)) {
        E = setTimeout(He, e2 + n2 * r2 + M);
      }
      animationEnd(I[0], function() {
        Me();
        raf(function() {
          qe();
          raf(we);
        });
      });
    }
  };
  var qe = function() {
    I.forEach(function(e2) {
      removeStyleProperty(e2, "animation-duration");
      removeStyleProperty(e2, "animation-delay");
      removeStyleProperty(e2, "animation-play-state");
    });
  };
  var ze = function() {
    W.forEach(function(e2) {
      e2.play();
    });
    if (f.length === 0 || I.length === 0) {
      we();
    }
  };
  var Ze = function() {
    if (H) {
      Ie(0);
      De();
    } else {
      Le();
    }
  };
  var Be = function(e2) {
    return new Promise(function(n2) {
      if (e2 && e2.sync) {
        g = true;
        B(function() {
          return g = false;
        }, { oneTimeCallback: true });
      }
      if (!v) {
        Ke();
      }
      if (b) {
        Ze();
        b = false;
      }
      if (T) {
        p = D.length + 1;
        T = false;
      }
      B(function() {
        return n2();
      }, { oneTimeCallback: true });
      D.forEach(function(e3) {
        e3.play();
      });
      if (H) {
        ze();
      } else {
        $e();
      }
    });
  };
  var Ge = function() {
    D.forEach(function(e2) {
      e2.stop();
    });
    if (v) {
      J();
      v = false;
    }
    Z();
  };
  var Je = function(e2, n2) {
    var r2;
    var t2 = f[0];
    if (t2 !== void 0 && (t2.offset === void 0 || t2.offset === 0)) {
      t2[e2] = n2;
    } else {
      f = __spreadArray([(r2 = { offset: 0 }, r2[e2] = n2, r2)], f);
    }
    return w;
  };
  var Qe = function(e2, n2) {
    var r2;
    var t2 = f[f.length - 1];
    if (t2 !== void 0 && (t2.offset === void 0 || t2.offset === 1)) {
      t2[e2] = n2;
    } else {
      f = __spreadArray(__spreadArray([], f), [(r2 = { offset: 1 }, r2[e2] = n2, r2)]);
    }
    return w;
  };
  var Ue = function(e2, n2, r2) {
    return Je(e2, n2).to(e2, r2);
  };
  return w = { parentAnimation: l, elements: I, childAnimations: D, id: x, animationFinish: we, from: Je, to: Qe, fromTo: Ue, parent: Se, play: Be, pause: je, stop: Ge, destroy: q, keyframes: be, addAnimation: Ce, addElement: Ae, update: Ne, fill: pe, direction: me, iterations: Pe, duration: Ee, easing: ge, delay: he, getWebAnimations: $, getKeyframes: ye, getFill: ue, getDirection: se, getDelay: de, getIterations: ce, getEasing: ve, getDuration: le, afterAddRead: X, afterAddWrite: Y, afterClearStyles: fe, afterStyles: oe, afterRemoveClass: ie, afterAddClass: ae, beforeAddRead: U, beforeAddWrite: V, beforeClearStyles: te, beforeStyles: re, beforeRemoveClass: ne, beforeAddClass: ee, onFinish: B, progressStart: Re, progressStep: Fe, progressEnd: Oe };
};

// ../../../../../Documents/CODE/ION/ION3-Photo/node_modules/@ionic/core/dist/esm-es5/index-931440b1.js
init_define_process_env();
var getIonPageElement = function(e) {
  if (e.classList.contains("ion-page")) {
    return e;
  }
  var n = e.querySelector(":scope > .ion-page, :scope > ion-nav, :scope > ion-tabs");
  if (n) {
    return n;
  }
  return e;
};

export {
  win,
  CSS,
  plt,
  promiseResolve,
  setMode,
  getMode,
  bootstrapLazy,
  componentOnReady,
  createAnimation,
  getIonPageElement
};
//# sourceMappingURL=chunk-7MGZ63NN.js.map
