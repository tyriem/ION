import {
  createAnimation,
  getIonPageElement
} from "./chunk-2ISCJKCC.js";
import {
  init_define_process_env
} from "./chunk-TVZRMU2U.js";

// ../../../../../Documents/CODE/ION/ION4-IOSPHOTO/node_modules/@ionic/core/dist/esm-es5/ios.transition-12db6216.js
init_define_process_env();
var DURATION = 540;
var getClonedElement = function(e) {
  return document.querySelector(e + ".ion-cloned-element");
};
var shadow = function(e) {
  return e.shadowRoot || e;
};
var getLargeTitle = function(e) {
  var t = e.tagName === "ION-TABS" ? e : e.querySelector("ion-tabs");
  var a = "ion-content ion-header:not(.header-collapse-condense-inactive) ion-title.title-large";
  if (t != null) {
    var r = t.querySelector("ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)");
    return r != null ? r.querySelector(a) : null;
  }
  return e.querySelector(a);
};
var getBackButton = function(e, t) {
  var a = e.tagName === "ION-TABS" ? e : e.querySelector("ion-tabs");
  var r = [];
  if (a != null) {
    var o = a.querySelector("ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)");
    if (o != null) {
      r = o.querySelectorAll("ion-buttons");
    }
  } else {
    r = e.querySelectorAll("ion-buttons");
  }
  for (var n = 0, i = r; n < i.length; n++) {
    var l = i[n];
    var s = l.closest("ion-header");
    var c = s && !s.classList.contains("header-collapse-condense-inactive");
    var f = l.querySelector("ion-back-button");
    var d = l.classList.contains("buttons-collapse");
    var m = l.slot === "start" || l.slot === "";
    if (f !== null && m && (d && c && t || !d)) {
      return f;
    }
  }
  return null;
};
var createLargeTitleTransition = function(e, t, a, r, o) {
  var n = getBackButton(r, a);
  var i = getLargeTitle(o);
  var l = getLargeTitle(r);
  var s = getBackButton(o, a);
  var c = n !== null && i !== null && !a;
  var f = l !== null && s !== null && a;
  if (c) {
    var d = i.getBoundingClientRect();
    var m = n.getBoundingClientRect();
    animateLargeTitle(e, t, a, i, d, m);
    animateBackButton(e, t, a, n, d, m);
  } else if (f) {
    var v = l.getBoundingClientRect();
    var p = s.getBoundingClientRect();
    animateLargeTitle(e, t, a, l, v, p);
    animateBackButton(e, t, a, s, v, p);
  }
  return { forward: c, backward: f };
};
var animateBackButton = function(e, t, a, r, o, n) {
  var i = t ? "calc(100% - " + (n.right + 4) + "px)" : n.left - 4 + "px";
  var l = t ? "7px" : "-7px";
  var s = t ? "-4px" : "4px";
  var c = t ? "-4px" : "4px";
  var f = t ? "right" : "left";
  var d = t ? "left" : "right";
  var m = [{ offset: 0, opacity: 0, transform: "translate3d(" + l + ", " + (o.top - 40) + "px, 0) scale(2.1)" }, { offset: 1, opacity: 1, transform: "translate3d(" + s + ", " + (n.top - 46) + "px, 0) scale(1)" }];
  var v = [{ offset: 0, opacity: 1, transform: "translate3d(" + s + ", " + (n.top - 46) + "px, 0) scale(1)" }, { offset: 0.6, opacity: 0 }, { offset: 1, opacity: 0, transform: "translate3d(" + l + ", " + (o.top - 40) + "px, 0) scale(2.1)" }];
  var p = a ? v : m;
  var y = [{ offset: 0, opacity: 0, transform: "translate3d(" + c + ", " + (n.top - 41) + "px, 0) scale(0.6)" }, { offset: 1, opacity: 1, transform: "translate3d(" + c + ", " + (n.top - 46) + "px, 0) scale(1)" }];
  var u = [{ offset: 0, opacity: 1, transform: "translate3d(" + c + ", " + (n.top - 46) + "px, 0) scale(1)" }, { offset: 0.2, opacity: 0, transform: "translate3d(" + c + ", " + (n.top - 41) + "px, 0) scale(0.6)" }, { offset: 1, opacity: 0, transform: "translate3d(" + c + ", " + (n.top - 41) + "px, 0) scale(0.6)" }];
  var b = a ? u : y;
  var g = createAnimation();
  var A = createAnimation();
  var S = getClonedElement("ion-back-button");
  var T = shadow(S).querySelector(".button-text");
  var h = shadow(S).querySelector("ion-icon");
  S.text = r.text;
  S.mode = r.mode;
  S.icon = r.icon;
  S.color = r.color;
  S.disabled = r.disabled;
  S.style.setProperty("display", "block");
  S.style.setProperty("position", "fixed");
  A.addElement(h);
  g.addElement(T);
  g.beforeStyles({ "transform-origin": f + " center" }).beforeAddWrite(function() {
    r.style.setProperty("display", "none");
    S.style.setProperty(f, i);
  }).afterAddWrite(function() {
    r.style.setProperty("display", "");
    S.style.setProperty("display", "none");
    S.style.removeProperty(f);
  }).keyframes(p);
  A.beforeStyles({ "transform-origin": d + " center" }).keyframes(b);
  e.addAnimation([g, A]);
};
var animateLargeTitle = function(e, t, a, r, o, n) {
  var i;
  var l = t ? "calc(100% - " + o.right + "px)" : o.left + "px";
  var s = t ? "-18px" : "18px";
  var c = t ? "right" : "left";
  var f = [{ offset: 0, opacity: 0, transform: "translate3d(" + s + ", " + (n.top - 4) + "px, 0) scale(0.49)" }, { offset: 0.1, opacity: 0 }, { offset: 1, opacity: 1, transform: "translate3d(0, " + (o.top - 2) + "px, 0) scale(1)" }];
  var d = [{ offset: 0, opacity: 0.99, transform: "translate3d(0, " + (o.top - 2) + "px, 0) scale(1)" }, { offset: 0.6, opacity: 0 }, { offset: 1, opacity: 0, transform: "translate3d(" + s + ", " + (n.top - 4) + "px, 0) scale(0.5)" }];
  var m = a ? f : d;
  var v = getClonedElement("ion-title");
  var p = createAnimation();
  v.innerText = r.innerText;
  v.size = r.size;
  v.color = r.color;
  p.addElement(v);
  p.beforeStyles((i = { "transform-origin": c + " center", height: "46px", display: "", position: "relative" }, i[c] = l, i)).beforeAddWrite(function() {
    r.style.setProperty("display", "none");
  }).afterAddWrite(function() {
    r.style.setProperty("display", "");
    v.style.setProperty("display", "none");
  }).keyframes(m);
  e.addAnimation(p);
};
var iosTransitionAnimation = function(e, t) {
  try {
    var a = "cubic-bezier(0.32,0.72,0,1)";
    var r = "opacity";
    var o = "transform";
    var n = "0%";
    var i = 0.8;
    var l = e.ownerDocument.dir === "rtl";
    var s = l ? "-99.5%" : "99.5%";
    var c = l ? "33%" : "-33%";
    var f = t.enteringEl;
    var d = t.leavingEl;
    var m = t.direction === "back";
    var v = f.querySelector(":scope > ion-content");
    var p = f.querySelectorAll(":scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *");
    var y = f.querySelectorAll(":scope > ion-header > ion-toolbar");
    var u = createAnimation();
    var b = createAnimation();
    u.addElement(f).duration(t.duration || DURATION).easing(t.easing || a).fill("both").beforeRemoveClass("ion-page-invisible");
    if (d && e) {
      var g = createAnimation();
      g.addElement(e);
      u.addAnimation(g);
    }
    if (!v && y.length === 0 && p.length === 0) {
      b.addElement(f.querySelector(":scope > .ion-page, :scope > ion-nav, :scope > ion-tabs"));
    } else {
      b.addElement(v);
      b.addElement(p);
    }
    u.addAnimation(b);
    if (m) {
      b.beforeClearStyles([r]).fromTo("transform", "translateX(" + c + ")", "translateX(" + n + ")").fromTo(r, i, 1);
    } else {
      b.beforeClearStyles([r]).fromTo("transform", "translateX(" + s + ")", "translateX(" + n + ")");
    }
    if (v) {
      var A = shadow(v).querySelector(".transition-effect");
      if (A) {
        var S = A.querySelector(".transition-cover");
        var T = A.querySelector(".transition-shadow");
        var h = createAnimation();
        var x = createAnimation();
        var E = createAnimation();
        h.addElement(A).beforeStyles({ opacity: "1", display: "block" }).afterStyles({ opacity: "", display: "" });
        x.addElement(S).beforeClearStyles([r]).fromTo(r, 0, 0.1);
        E.addElement(T).beforeClearStyles([r]).fromTo(r, 0.03, 0.7);
        h.addAnimation([x, E]);
        b.addAnimation([h]);
      }
    }
    var q = f.querySelector("ion-header.header-collapse-condense");
    var X = createLargeTitleTransition(u, l, m, f, d), C = X.forward, k = X.backward;
    y.forEach(function(e2) {
      var t2 = createAnimation();
      t2.addElement(e2);
      u.addAnimation(t2);
      var a2 = createAnimation();
      a2.addElement(e2.querySelector("ion-title"));
      var o2 = createAnimation();
      var i2 = Array.from(e2.querySelectorAll("ion-buttons,[menuToggle]"));
      var f2 = e2.closest("ion-header");
      var d2 = f2 && f2.classList.contains("header-collapse-condense-inactive");
      var v2;
      if (m) {
        v2 = i2.filter(function(e3) {
          var t3 = e3.classList.contains("buttons-collapse");
          return t3 && !d2 || !t3;
        });
      } else {
        v2 = i2.filter(function(e3) {
          return !e3.classList.contains("buttons-collapse");
        });
      }
      o2.addElement(v2);
      var p2 = createAnimation();
      p2.addElement(e2.querySelectorAll(":scope > *:not(ion-title):not(ion-buttons):not([menuToggle])"));
      var y2 = createAnimation();
      y2.addElement(shadow(e2).querySelector(".toolbar-background"));
      var b2 = createAnimation();
      var g2 = e2.querySelector("ion-back-button");
      if (g2) {
        b2.addElement(g2);
      }
      t2.addAnimation([a2, o2, p2, y2, b2]);
      o2.fromTo(r, 0.01, 1);
      p2.fromTo(r, 0.01, 1);
      if (m) {
        if (!d2) {
          a2.fromTo("transform", "translateX(" + c + ")", "translateX(" + n + ")").fromTo(r, 0.01, 1);
        }
        p2.fromTo("transform", "translateX(" + c + ")", "translateX(" + n + ")");
        b2.fromTo(r, 0.01, 1);
      } else {
        if (!q) {
          a2.fromTo("transform", "translateX(" + s + ")", "translateX(" + n + ")").fromTo(r, 0.01, 1);
        }
        p2.fromTo("transform", "translateX(" + s + ")", "translateX(" + n + ")");
        y2.beforeClearStyles([r, "transform"]);
        var A2 = f2 === null || f2 === void 0 ? void 0 : f2.translucent;
        if (!A2) {
          y2.fromTo(r, 0.01, "var(--opacity)");
        } else {
          y2.fromTo("transform", l ? "translateX(-100%)" : "translateX(100%)", "translateX(0px)");
        }
        if (!C) {
          b2.fromTo(r, 0.01, 1);
        }
        if (g2 && !C) {
          var S2 = createAnimation();
          S2.addElement(shadow(g2).querySelector(".button-text")).fromTo("transform", l ? "translateX(-100px)" : "translateX(100px)", "translateX(0px)");
          t2.addAnimation(S2);
        }
      }
    });
    if (d) {
      var w = createAnimation();
      var B = d.querySelector(":scope > ion-content");
      var L = d.querySelectorAll(":scope > ion-header > ion-toolbar");
      var P = d.querySelectorAll(":scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *");
      if (!B && L.length === 0 && P.length === 0) {
        w.addElement(d.querySelector(":scope > .ion-page, :scope > ion-nav, :scope > ion-tabs"));
      } else {
        w.addElement(B);
        w.addElement(P);
      }
      u.addAnimation(w);
      if (m) {
        w.beforeClearStyles([r]).fromTo("transform", "translateX(" + n + ")", l ? "translateX(-100%)" : "translateX(100%)");
        var R = getIonPageElement(d);
        u.afterAddWrite(function() {
          if (u.getDirection() === "normal") {
            R.style.setProperty("display", "none");
          }
        });
      } else {
        w.fromTo("transform", "translateX(" + n + ")", "translateX(" + c + ")").fromTo(r, 1, i);
      }
      if (B) {
        var I = shadow(B).querySelector(".transition-effect");
        if (I) {
          var N = I.querySelector(".transition-cover");
          var W = I.querySelector(".transition-shadow");
          var j = createAnimation();
          var D = createAnimation();
          var O = createAnimation();
          j.addElement(I).beforeStyles({ opacity: "1", display: "block" }).afterStyles({ opacity: "", display: "" });
          D.addElement(N).beforeClearStyles([r]).fromTo(r, 0.1, 0);
          O.addElement(W).beforeClearStyles([r]).fromTo(r, 0.7, 0.03);
          j.addAnimation([D, O]);
          w.addAnimation([j]);
        }
      }
      L.forEach(function(e2) {
        var t2 = createAnimation();
        t2.addElement(e2);
        var a2 = createAnimation();
        a2.addElement(e2.querySelector("ion-title"));
        var i2 = createAnimation();
        var s2 = e2.querySelectorAll("ion-buttons,[menuToggle]");
        var f2 = e2.closest("ion-header");
        var d2 = f2 && f2.classList.contains("header-collapse-condense-inactive");
        var v2 = Array.from(s2).filter(function(e3) {
          var t3 = e3.classList.contains("buttons-collapse");
          return t3 && !d2 || !t3;
        });
        i2.addElement(v2);
        var p2 = createAnimation();
        var y2 = e2.querySelectorAll(":scope > *:not(ion-title):not(ion-buttons):not([menuToggle])");
        if (y2.length > 0) {
          p2.addElement(y2);
        }
        var b2 = createAnimation();
        b2.addElement(shadow(e2).querySelector(".toolbar-background"));
        var g2 = createAnimation();
        var A2 = e2.querySelector("ion-back-button");
        if (A2) {
          g2.addElement(A2);
        }
        t2.addAnimation([a2, i2, p2, g2, b2]);
        u.addAnimation(t2);
        g2.fromTo(r, 0.99, 0);
        i2.fromTo(r, 0.99, 0);
        p2.fromTo(r, 0.99, 0);
        if (m) {
          if (!d2) {
            a2.fromTo("transform", "translateX(" + n + ")", l ? "translateX(-100%)" : "translateX(100%)").fromTo(r, 0.99, 0);
          }
          p2.fromTo("transform", "translateX(" + n + ")", l ? "translateX(-100%)" : "translateX(100%)");
          b2.beforeClearStyles([r, "transform"]);
          var S2 = f2 === null || f2 === void 0 ? void 0 : f2.translucent;
          if (!S2) {
            b2.fromTo(r, "var(--opacity)", 0);
          } else {
            b2.fromTo("transform", "translateX(0px)", l ? "translateX(-100%)" : "translateX(100%)");
          }
          if (A2 && !k) {
            var T2 = createAnimation();
            T2.addElement(shadow(A2).querySelector(".button-text")).fromTo("transform", "translateX(" + n + ")", "translateX(" + ((l ? -124 : 124) + "px") + ")");
            t2.addAnimation(T2);
          }
        } else {
          if (!d2) {
            a2.fromTo("transform", "translateX(" + n + ")", "translateX(" + c + ")").fromTo(r, 0.99, 0).afterClearStyles([o, r]);
          }
          p2.fromTo("transform", "translateX(" + n + ")", "translateX(" + c + ")").afterClearStyles([o, r]);
          g2.afterClearStyles([r]);
          a2.afterClearStyles([r]);
          i2.afterClearStyles([r]);
        }
      });
    }
    return u;
  } catch (z) {
    throw z;
  }
};

export {
  shadow,
  iosTransitionAnimation
};
//# sourceMappingURL=chunk-D6TNROVW.js.map
